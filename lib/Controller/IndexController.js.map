{"version":3,"sources":["../../src/Controller/IndexController.js"],"names":["IndexController","constructor","args","logger","Logger","start","callback","event","progress","Promise","resolve","reject","output","doesFolderExist","isCrawl","isSingle","crawlService","CrawlService","on","report","toLog","verbose","console","log","toString","sitemapService","SitemapService"],"mappings":";;;;;;;AACA;;AACA;;AAEA;;AACA;;;;AAEe,MAAMA,eAAN,CAAsB;AAIjCC,EAAAA,WAAW,CAACC,IAAD,EAAa;AACpB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAc,IAAIC,eAAJ,CAAWF,IAAX,CAAd;AACH;;AAEDG,EAAAA,KAAK,GACa;AAAA,QADZC,QACY,uEADS,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAC/C,CAAiB;AACd,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKT,IAAL,CAAUU,MAAV,CAAiBC,eAAjB;;AACA,UAAI,KAAKX,IAAL,CAAUY,OAAV,MAAuB,KAAKZ,IAAL,CAAUa,QAAV,EAA3B,EAAiD;AAC7C,YAAIC,YAAY,GAAG,IAAIC,qBAAJ,CAAiB,KAAKf,IAAtB,CAAnB;AACAc,QAAAA,YAAY,CACPE,EADL,CACQ,UADR,EACoBV,QAAQ,IAAI;AACxBF,UAAAA,QAAQ,CAAC,UAAD,EAAaE,QAAb,CAAR;AACA,eAAKL,MAAL,CAAYgB,MAAZ,CAAmBX,QAAQ,CAACY,KAAT,EAAnB;;AACA,cAAI,KAAKlB,IAAL,CAAUmB,OAAd,EAAuB;AACnBC,YAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACgB,QAAT,EAAZ;AACH;AACJ,SAPL,EAQKN,EARL,CAQQ,UARR,EAQoB,MAAM;AAClBZ,UAAAA,QAAQ,CAAC,UAAD,CAAR;;AACA,cAAI,KAAKJ,IAAL,CAAUmB,OAAd,EAAuB;AACnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AACDb,UAAAA,OAAO;AACV,SAdL;AAeAM,QAAAA,YAAY,CAACX,KAAb;AACH,OAlBD,MAkBO;AACH,YAAIoB,cAAc,GAAG,IAAIC,uBAAJ,CAAmB,KAAKxB,IAAxB,CAArB;AACAuB,QAAAA,cAAc,CACTP,EADL,CACQ,UADR,EACoBV,QAAQ,IAAI;AACxBF,UAAAA,QAAQ,CAAC,UAAD,EAAaE,QAAb,CAAR;AACA,eAAKL,MAAL,CAAYgB,MAAZ,CAAmBX,QAAQ,CAACY,KAAT,EAAnB;;AACA,cAAI,KAAKlB,IAAL,CAAUmB,OAAd,EAAuB;AACnBC,YAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACgB,QAAT,EAAZ;AACH;AACJ,SAPL,EAQKN,EARL,CAQQ,UARR,EAQoB,MAAM;AAClBZ,UAAAA,QAAQ,CAAC,UAAD,CAAR;;AACA,cAAI,KAAKJ,IAAL,CAAUmB,OAAd,EAAuB;AACnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AACDb,UAAAA,OAAO;AACV,SAdL;AAeAe,QAAAA,cAAc,CAACpB,KAAf;AACH;AACJ,KAvCM,CAAP;AAwCH;;AAnDgC","sourcesContent":["// @flow\nimport CrawlService from '../Service/CrawlService.js';\nimport SitemapService from '../Service/SitemapService.js';\n\nimport Logger from '../Utility/Logger.js';\nimport Args from '../Model/Args.js';\n\nexport default class IndexController {\n    args: Args;\n    logger: Logger;\n\n    constructor(args: Args) {\n        this.args = args;\n        this.logger = new Logger(args);\n    }\n\n    start(callback: function = (event, progress) => {\n    }): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.args.output.doesFolderExist();\n            if (this.args.isCrawl() || this.args.isSingle()) {\n                let crawlService = new CrawlService(this.args);\n                crawlService\n                    .on('progress', progress => {\n                        callback('progress', progress);\n                        this.logger.report(progress.toLog());\n                        if (this.args.verbose) {\n                            console.log(progress.toString());\n                        }\n                    })\n                    .on('complete', () => {\n                        callback('complete');\n                        if (this.args.verbose) {\n                            console.log('Done');\n                        }\n                        resolve();\n                    });\n                crawlService.start();\n            } else {\n                let sitemapService = new SitemapService(this.args);\n                sitemapService\n                    .on('progress', progress => {\n                        callback('progress', progress);\n                        this.logger.report(progress.toLog());\n                        if (this.args.verbose) {\n                            console.log(progress.toString());\n                        }\n                    })\n                    .on('complete', () => {\n                        callback('complete');\n                        if (this.args.verbose) {\n                            console.log('Done');\n                        }\n                        resolve();\n                    });\n                sitemapService.start();\n            }\n        });\n    }\n}\n"],"file":"IndexController.js"}