{"version":3,"sources":["../../src/Controller/IndexController.js"],"names":["IndexController","constructor","args","logger","Logger","start","callback","event","progress","Promise","resolve","reject","output","doesFolderExist","isCrawl","isSingle","crawlService","CrawlService","on","report","toLog","verbose","console","log","toString","sitemapService","SitemapService"],"mappings":"6FACA,6EACA,iFAEA,iEACA,2D,kFAEe,KAAMA,CAAAA,eAAgB,CAIjCC,WAAW,CAACC,IAAD,CAAa,CACpB,KAAKA,IAAL,CAAYA,IAAZ,CACA,KAAKC,MAAL,CAAc,GAAIC,gBAAJ,CAAWF,IAAX,CACjB,CAEDG,KAAK,EACa,IADZC,CAAAA,QACY,2DADS,CAACC,KAAD,CAAQC,QAAR,GAAqB,CAC/C,CAAiB,CACd,MAAO,IAAIC,CAAAA,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,GAAqB,CACpC,KAAKT,IAAL,CAAUU,MAAV,CAAiBC,eAAjB,GACA,GAAI,KAAKX,IAAL,CAAUY,OAAV,IAAuB,KAAKZ,IAAL,CAAUa,QAAV,EAA3B,CAAiD,CAC7C,GAAIC,CAAAA,YAAY,CAAG,GAAIC,sBAAJ,CAAiB,KAAKf,IAAtB,CAAnB,CACAc,YAAY,CACPE,EADL,CACQ,UADR,CACoBV,QAAQ,EAAI,CACxBF,QAAQ,CAAC,UAAD,CAAaE,QAAb,CAAR,CACA,KAAKL,MAAL,CAAYgB,MAAZ,CAAmBX,QAAQ,CAACY,KAAT,EAAnB,EACA,GAAI,KAAKlB,IAAL,CAAUmB,OAAd,CAAuB,CACnBC,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACgB,QAAT,EAAZ,CACH,CACJ,CAPL,EAQKN,EARL,CAQQ,UARR,CAQoB,IAAM,CAClBZ,QAAQ,CAAC,UAAD,CAAR,CACA,GAAI,KAAKJ,IAAL,CAAUmB,OAAd,CAAuB,CACnBC,OAAO,CAACC,GAAR,CAAY,MAAZ,CACH,CACDb,OAAO,EACV,CAdL,EAeAM,YAAY,CAACX,KAAb,EACH,CAlBD,IAkBO,CACH,GAAIoB,CAAAA,cAAc,CAAG,GAAIC,wBAAJ,CAAmB,KAAKxB,IAAxB,CAArB,CACAuB,cAAc,CACTP,EADL,CACQ,UADR,CACoBV,QAAQ,EAAI,CACxBF,QAAQ,CAAC,UAAD,CAAaE,QAAb,CAAR,CACA,KAAKL,MAAL,CAAYgB,MAAZ,CAAmBX,QAAQ,CAACY,KAAT,EAAnB,EACA,GAAI,KAAKlB,IAAL,CAAUmB,OAAd,CAAuB,CACnBC,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACgB,QAAT,EAAZ,CACH,CACJ,CAPL,EAQKN,EARL,CAQQ,UARR,CAQoB,IAAM,CAClBZ,QAAQ,CAAC,UAAD,CAAR,CACA,GAAI,KAAKJ,IAAL,CAAUmB,OAAd,CAAuB,CACnBC,OAAO,CAACC,GAAR,CAAY,MAAZ,CACH,CACDb,OAAO,EACV,CAdL,EAeAe,cAAc,CAACpB,KAAf,EACH,CACJ,CAvCM,CAwCV,CAnDgC,C","sourcesContent":["// @flow\nimport CrawlService from '../Service/CrawlService';\nimport SitemapService from '../Service/SitemapService';\n\nimport Logger from '../Utility/Logger';\nimport Args from '../Model/Args';\n\nexport default class IndexController {\n    args: Args;\n    logger: Logger;\n\n    constructor(args: Args) {\n        this.args = args;\n        this.logger = new Logger(args);\n    }\n\n    start(callback: function = (event, progress) => {\n    }): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.args.output.doesFolderExist();\n            if (this.args.isCrawl() || this.args.isSingle()) {\n                let crawlService = new CrawlService(this.args);\n                crawlService\n                    .on('progress', progress => {\n                        callback('progress', progress);\n                        this.logger.report(progress.toLog());\n                        if (this.args.verbose) {\n                            console.log(progress.toString());\n                        }\n                    })\n                    .on('complete', () => {\n                        callback('complete');\n                        if (this.args.verbose) {\n                            console.log('Done');\n                        }\n                        resolve();\n                    });\n                crawlService.start();\n            } else {\n                let sitemapService = new SitemapService(this.args);\n                sitemapService\n                    .on('progress', progress => {\n                        callback('progress', progress);\n                        this.logger.report(progress.toLog());\n                        if (this.args.verbose) {\n                            console.log(progress.toString());\n                        }\n                    })\n                    .on('complete', () => {\n                        callback('complete');\n                        if (this.args.verbose) {\n                            console.log('Done');\n                        }\n                        resolve();\n                    });\n                sitemapService.start();\n            }\n        });\n    }\n}\n"],"file":"IndexController.js"}