{"version":3,"sources":["../../src/Service/SitemapService.js"],"names":["SitemapService","Service","start","sitemapRepository","SitemapRepository","args","domain","crawlStatesRepository","SqliteCrawlStatesRepository","getProjectPath","findAllPages","progress","emitProgress","then","urls","forEach","url","addPoolUrl","emitComplete","length"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAEA;;;AAGe,MAAMA,cAAN,SAA6BC,gBAA7B,CAAqC;AAChD;;;;AAIAC,EAAAA,KAAK,GAAG;AACJ,QAAIC,iBAAiB,GAAG,IAAIC,0BAAJ,CAAsB,YAAY,KAAKC,IAAL,CAAUC,MAAtB,GAA+B,cAArD,CAAxB;AACA,QAAIC,qBAAqB,GAAG,IAAIC,oCAAJ,CAAgC,KAAKC,cAAL,EAAhC,CAA5B;AACAN,IAAAA,iBAAiB,CACZO,YADL,CACkBC,QAAQ,IAAI,KAAKC,YAAL,CAAkBD,QAAlB,CAD9B,EAEKE,IAFL,CAEUC,IAAI,IAAI;AACVA,MAAAA,IAAI,CAACC,OAAL,CAAaC,GAAG,IAAIT,qBAAqB,CAACU,UAAtB,CAAiCD,GAAG,CAACA,GAArC,CAApB;AACA,WAAKE,YAAL,CAAkBJ,IAAI,CAACK,MAAvB;AACH,KALL;AAMH;;AAd+C","sourcesContent":["// @flow\nimport Service from \"./Service.js\";\nimport SitemapRepository from \"../Repository/SitemapRepository.js\";\nimport SqliteCrawlStatesRepository from \"../Repository/SqliteCrawlStatesRepository\";\n\n/**\n * This service will extract all the urls from a sitemap or nested sitemaps.\n */\nexport default class SitemapService extends Service {\n    /**\n     * Start the sitemap service to extract the domain urls from the sitemap.\n     * Assumes the sitemap is located at the domain + /sitemap.xml\n     */\n    start() {\n        let sitemapRepository = new SitemapRepository(\"http://\" + this.args.domain + \"/sitemap.xml\");\n        let crawlStatesRepository = new SqliteCrawlStatesRepository(this.getProjectPath());\n        sitemapRepository\n            .findAllPages(progress => this.emitProgress(progress))\n            .then(urls => {\n                urls.forEach(url => crawlStatesRepository.addPoolUrl(url.url));\n                this.emitComplete(urls.length);\n            });\n    }\n}\n"],"file":"SitemapService.js"}