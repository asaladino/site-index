{"version":3,"sources":["../../src/Model/Progress.js"],"names":["Progress","constructor","url","html","urls","urlsPool","message","buildWithMessage","progress","toString","toLog","urlsPoolLength","urlsLength"],"mappings":";;;;;;;AACA;;;;AAQA;;;AAGe,MAAMA,QAAN,CAAe;AAO5B;;;;;;;;AAQAC,EAAAA,WAAW,GAMT;AAAA,QALAC,GAKA,uEALY,IAKZ;AAAA,QAJAC,IAIA,uEAJgB,IAIhB;AAAA,QAHAC,IAGA,uEAHe,CAGf;AAAA,QAFAC,QAEA,uEAFmB,CAEnB;AAAA,QADAC,OACA,uEADmB,IACnB;AACA,SAAKJ,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;AAED;;;;;;AAIA,SAAOC,gBAAP,CAAwBD,OAAxB,EAAmD;AACjD,QAAIE,QAAQ,GAAG,IAAIR,QAAJ,EAAf;AACAQ,IAAAA,QAAQ,CAACF,OAAT,GAAmBA,OAAnB;AACA,WAAOE,QAAP;AACD;AAED;;;;;AAGAC,EAAAA,QAAQ,GAAY;AAClB,QAAI,KAAKP,GAAL,IAAY,IAAhB,EAAsB;AACpB,aAAQ,GAAE,KAAKG,QAAS,MAAK,KAAKD,IAAK,mBAAkB,KAAKF,GAAL,CAASA,GAAI,EAAtE;AACD;;AACD,WAAO,KAAKI,OAAZ;AACD;AAED;;;;;AAGAI,EAAAA,KAAK,GAAgB;AACnB,WAAO;AACLC,MAAAA,cAAc,EAAE,KAAKN,QADhB;AAELO,MAAAA,UAAU,EAAE,KAAKR,IAFZ;AAGLF,MAAAA,GAAG,EAAE,KAAKA,GAAL,IAAY,IAAZ,GAAmB,EAAnB,GAAwB,KAAKA,GAAL,CAASA;AAHjC,KAAP;AAKD;;AA1D2B","sourcesContent":["// @flow\r\nimport Url from \"./Url\";\r\n\r\ntype ProgressLog = {\r\n  urlsPoolLength: number,\r\n  urlsLength: number,\r\n  url: string\r\n};\r\n\r\n/**\r\n * Class for reporting the progress.\r\n */\r\nexport default class Progress {\r\n  url: ?Url;\r\n  html: ?string;\r\n  urls: number;\r\n  urlsPool: number;\r\n  message: ?string;\r\n\r\n  /**\r\n   * Build a progress object.\r\n   * @param url {Url} current url\r\n   * @param html {string} for the current url.\r\n   * @param urls {int} urls found.\r\n   * @param urlsPool {int} left to progress through.\r\n   * @param message {string} Message to display.\r\n   */\r\n  constructor(\r\n    url: ?Url = null,\r\n    html: ?string = null,\r\n    urls: number = 0,\r\n    urlsPool: number = 0,\r\n    message: ?string = null\r\n  ) {\r\n    this.url = url;\r\n    this.html = html;\r\n    this.urls = urls;\r\n    this.urlsPool = urlsPool;\r\n    this.message = message;\r\n  }\r\n\r\n  /**\r\n   * Build a progress with a message only.\r\n   * @param message {String} to display.\r\n   */\r\n  static buildWithMessage(message: string): Progress {\r\n    let progress = new Progress();\r\n    progress.message = message;\r\n    return progress;\r\n  }\r\n\r\n  /**\r\n   * Display something meaning full about the progress.\r\n   */\r\n  toString(): ?string {\r\n    if (this.url != null) {\r\n      return `${this.urlsPool} | ${this.urls} :: retrieving: ${this.url.url}`;\r\n    }\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * Something to report in the logs.\r\n   */\r\n  toLog(): ProgressLog {\r\n    return {\r\n      urlsPoolLength: this.urlsPool,\r\n      urlsLength: this.urls,\r\n      url: this.url == null ? \"\" : this.url.url\r\n    };\r\n  }\r\n}\r\n"],"file":"Progress.js"}