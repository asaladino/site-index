{"version":3,"sources":["../../src/Model/Progress.js"],"names":["Url","Progress","constructor","url","html","headers","urls","urlsPool","message","buildWithMessage","progress","toString","toLog","urlsPoolLength","urlsLength"],"mappings":"AACA,OAAOA,GAAP,MAAgB,UAAhB;;AAQA;;;AAGA,eAAe,MAAMC,QAAN,CAAe;AAQ1B;;;;;;;;;AASAC,EAAAA,WAAW,CACPC,GAAS,GAAG,IADL,EAEPC,IAAa,GAAG,IAFT,EAGPC,OAAa,GAAG,IAHT,EAIPC,IAAY,GAAG,CAJR,EAKPC,QAAgB,GAAG,CALZ,EAMPC,OAAgB,GAAG,IANZ,EAOT;AACE,SAAKL,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;AAED;;;;;;AAIA,SAAOC,gBAAP,CAAwBD,OAAxB,EAAmD;AAC/C,QAAIE,QAAQ,GAAG,IAAIT,QAAJ,EAAf;AACAS,IAAAA,QAAQ,CAACF,OAAT,GAAmBA,OAAnB;AACA,WAAOE,QAAP;AACH;AAED;;;;;AAGAC,EAAAA,QAAQ,GAAY;AAChB,QAAI,KAAKR,GAAL,IAAY,IAAhB,EAAsB;AAClB,aAAQ,GAAE,KAAKI,QAAS,MAAK,KAAKD,IAAK,mBAAkB,KAAKH,GAAL,CAASA,GAAI,EAAtE;AACH;;AACD,WAAO,KAAKK,OAAZ;AACH;AAED;;;;;AAGAI,EAAAA,KAAK,GAAgB;AACjB,WAAO;AACHC,MAAAA,cAAc,EAAE,KAAKN,QADlB;AAEHO,MAAAA,UAAU,EAAE,KAAKR,IAFd;AAGHH,MAAAA,GAAG,EAAE,KAAKA,GAAL,IAAY,IAAZ,GAAmB,EAAnB,GAAwB,KAAKA,GAAL,CAASA;AAHnC,KAAP;AAKH;;AA9DyB","sourcesContent":["// @flow\nimport Url from \"./Url.js\";\n\ntype ProgressLog = {\n    urlsPoolLength: number,\n    urlsLength: number,\n    url: string\n};\n\n/**\n * Class for reporting the progress.\n */\nexport default class Progress {\n    url: ?Url;\n    html: ?string;\n    headers: ?any;\n    urls: number;\n    urlsPool: number;\n    message: ?string;\n\n    /**\n     * Build a progress object.\n     * @param url {Url} current url\n     * @param html {string} for the current url.\n     * @param headers {any} for the current url.\n     * @param urls {int} urls found.\n     * @param urlsPool {int} left to progress through.\n     * @param message {string} Message to display.\n     */\n    constructor(\n        url: ?Url = null,\n        html: ?string = null,\n        headers: ?any = null,\n        urls: number = 0,\n        urlsPool: number = 0,\n        message: ?string = null\n    ) {\n        this.url = url;\n        this.html = html;\n        this.headers = headers;\n        this.urls = urls;\n        this.urlsPool = urlsPool;\n        this.message = message;\n    }\n\n    /**\n     * Build a progress with a message only.\n     * @param message {String} to display.\n     */\n    static buildWithMessage(message: string): Progress {\n        let progress = new Progress();\n        progress.message = message;\n        return progress;\n    }\n\n    /**\n     * Display something meaning full about the progress.\n     */\n    toString(): ?string {\n        if (this.url != null) {\n            return `${this.urlsPool} | ${this.urls} :: retrieving: ${this.url.url}`;\n        }\n        return this.message;\n    }\n\n    /**\n     * Something to report in the logs.\n     */\n    toLog(): ProgressLog {\n        return {\n            urlsPoolLength: this.urlsPool,\n            urlsLength: this.urls,\n            url: this.url == null ? \"\" : this.url.url\n        };\n    }\n}\n"],"file":"Progress.js"}