{"version":3,"sources":["../../src/Model/Progress.js"],"names":["Progress","constructor","url","html","headers","urls","urlsPool","message","buildWithMessage","progress","toString","toLog","urlsPoolLength","urlsLength"],"mappings":"6FACA,kD,kFAQA;;GAGe,KAAMA,CAAAA,QAAS,CAQ1B;;;;;;;;OASAC,WAAW,EAOT,IANEC,CAAAA,GAMF,2DANc,IAMd,IALEC,CAAAA,IAKF,2DALkB,IAKlB,IAJEC,CAAAA,OAIF,2DAJkB,IAIlB,IAHEC,CAAAA,IAGF,2DAHiB,CAGjB,IAFEC,CAAAA,QAEF,2DAFqB,CAErB,IADEC,CAAAA,OACF,2DADqB,IACrB,CACE,KAAKL,GAAL,CAAWA,GAAX,CACA,KAAKC,IAAL,CAAYA,IAAZ,CACA,KAAKC,OAAL,CAAeA,OAAf,CACA,KAAKC,IAAL,CAAYA,IAAZ,CACA,KAAKC,QAAL,CAAgBA,QAAhB,CACA,KAAKC,OAAL,CAAeA,OAClB,CAED;;;OAIA,MAAOC,CAAAA,gBAAP,CAAwBD,OAAxB,CAAmD,CAC/C,GAAIE,CAAAA,QAAQ,CAAG,GAAIT,CAAAA,QAAnB,CACAS,QAAQ,CAACF,OAAT,CAAmBA,OAAnB,CACA,MAAOE,CAAAA,QACV,CAED;;OAGAC,QAAQ,EAAY,CAChB,GAAI,KAAKR,GAAL,EAAY,IAAhB,CAAsB,CAClB,gBAAU,KAAKI,QAAf,eAA6B,KAAKD,IAAlC,4BAAyD,KAAKH,GAAL,CAASA,GAAlE,CACH,CACD,MAAO,MAAKK,OACf,CAED;;OAGAI,KAAK,EAAgB,CACjB,MAAO,CACHC,cAAc,CAAE,KAAKN,QADlB,CAEHO,UAAU,CAAE,KAAKR,IAFd,CAGHH,GAAG,CAAE,KAAKA,GAAL,EAAY,IAAZ,CAAmB,EAAnB,CAAwB,KAAKA,GAAL,CAASA,GAHnC,CAKV,CA9DyB,C","sourcesContent":["// @flow\nimport Url from \"./Url\";\n\ntype ProgressLog = {\n    urlsPoolLength: number,\n    urlsLength: number,\n    url: string\n};\n\n/**\n * Class for reporting the progress.\n */\nexport default class Progress {\n    url: ?Url;\n    html: ?string;\n    headers: ?any;\n    urls: number;\n    urlsPool: number;\n    message: ?string;\n\n    /**\n     * Build a progress object.\n     * @param url {Url} current url\n     * @param html {string} for the current url.\n     * @param headers {any} for the current url.\n     * @param urls {int} urls found.\n     * @param urlsPool {int} left to progress through.\n     * @param message {string} Message to display.\n     */\n    constructor(\n        url: ?Url = null,\n        html: ?string = null,\n        headers: ?any = null,\n        urls: number = 0,\n        urlsPool: number = 0,\n        message: ?string = null\n    ) {\n        this.url = url;\n        this.html = html;\n        this.headers = headers;\n        this.urls = urls;\n        this.urlsPool = urlsPool;\n        this.message = message;\n    }\n\n    /**\n     * Build a progress with a message only.\n     * @param message {String} to display.\n     */\n    static buildWithMessage(message: string): Progress {\n        let progress = new Progress();\n        progress.message = message;\n        return progress;\n    }\n\n    /**\n     * Display something meaning full about the progress.\n     */\n    toString(): ?string {\n        if (this.url != null) {\n            return `${this.urlsPool} | ${this.urls} :: retrieving: ${this.url.url}`;\n        }\n        return this.message;\n    }\n\n    /**\n     * Something to report in the logs.\n     */\n    toLog(): ProgressLog {\n        return {\n            urlsPoolLength: this.urlsPool,\n            urlsLength: this.urls,\n            url: this.url == null ? \"\" : this.url.url\n        };\n    }\n}\n"],"file":"Progress.js"}