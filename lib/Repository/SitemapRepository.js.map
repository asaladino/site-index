{"version":3,"sources":["../../src/Repository/SitemapRepository.js"],"names":["request","xml2js","Progress","Url","SitemapRepository","constructor","initialSitemap","initialUrl","sitemaps","urls","findAllPages","progress","length","push","Promise","resolve","reject","parseSiteMap","url","pop","done","res","xml","getBody","parseString","err","result","forEach","entry"],"mappings":"AACA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA;;;;AAGA,eAAe,MAAMC,iBAAN,CAAwB;AACnC;;;;AAIA;;;;AAIA;;;;AAWA;;;AAGAC,EAAAA,WAAW,CAACC,cAAD,EAAyB;AAChC,SAAKC,UAAL,GAAkBD,cAAlB;AACA,SAAKE,QAAL,GAAgB,EAAhB;AACA,SAAKC,IAAL,GAAY,EAAZ;AACH;AAED;;;;;AAGAC,EAAAA,YAAY,CAACC,QAAD,EAA6C;AACrD,SAAKA,QAAL,GAAgBA,QAAhB;;AACA,QAAI,KAAKH,QAAL,CAAcI,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,WAAKJ,QAAL,CAAcK,IAAd,CAAmB,KAAKN,UAAxB;AACH;;AACD,WAAO,IAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKD,OAAL,GAAeA,OAAf;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,WAAKC,YAAL;AACH,KAJM,CAAP;AAKH;AAED;;;;;;AAIAA,EAAAA,YAAY,GAAG;AACX,QAAIC,GAAG,GAAG,KAAKV,QAAL,CAAcW,GAAd,EAAV;AACA,SAAKR,QAAL,CAAc,IAAIT,QAAJ,CAAa,IAAIC,GAAJ,CAAQe,GAAR,CAAb,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,KAAKV,QAAL,CAAcI,MAArD,EAA6D,KAAKH,IAAL,CAAUG,MAAvE,CAAd;AACAZ,IAAAA,OAAO,CAAC,KAAD,EAAQkB,GAAR,CAAP,CAAoBE,IAApB,CAAyBC,GAAG,IAAI;AAC5B,UAAIC,GAAG,GAAGD,GAAG,CAACE,OAAJ,CAAY,MAAZ,CAAV;AACAtB,MAAAA,MAAM,CAACuB,WAAP,CAAmBF,GAAnB,EAAwB,CAACG,GAAD,EAAMC,MAAN,KAAiB;AACrC,YAAIA,MAAM,CAAC,QAAD,CAAV,EAAsB;AAClBA,UAAAA,MAAM,CAAC,QAAD,CAAN,CAAiB,KAAjB,EAAwBC,OAAxB,CAAgCC,KAAK,IAAI;AACrC,gBAAIV,GAAG,GAAG,IAAIf,GAAJ,CAAQyB,KAAK,CAAC,KAAD,CAAL,CAAa,CAAb,CAAR,CAAV;AACA,iBAAKnB,IAAL,CAAUI,IAAV,CAAeK,GAAf;AACH,WAHD;;AAIA,cAAI,KAAKV,QAAL,CAAcI,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,iBAAKG,OAAL,CAAa,KAAKN,IAAlB;AACH,WAFD,MAEO;AACH,iBAAKQ,YAAL;AACH;AACJ;;AACD,YAAIS,MAAM,CAAC,cAAD,CAAV,EAA4B;AACxBA,UAAAA,MAAM,CAAC,cAAD,CAAN,CAAuB,SAAvB,EAAkCC,OAAlC,CAA0CC,KAAK,IAAI;AAC/C,iBAAKpB,QAAL,CAAcK,IAAd,CAAmBe,KAAK,CAAC,KAAD,CAAL,CAAa,CAAb,CAAnB;AACH,WAFD;AAGA,eAAKX,YAAL;AACH;AACJ,OAlBD;AAmBH,KArBD;AAsBH;;AAzEkC","sourcesContent":["// @flow\nimport request from \"then-request\";\nimport * as xml2js from \"xml2js\";\nimport Progress from \"../Model/Progress.js\";\nimport Url from \"../Model/Url.js\";\n\n/**\n * Get all the urls from the sitemaps.\n */\nexport default class SitemapRepository {\n    /**\n     * The initial sitemap url.\n     */\n    initialUrl: string;\n    /**\n     * Array of the site maps to search. This list gets popped and will be empty.\n     */\n    sitemaps: string[];\n    /**\n     * Array of all the urls found.\n     */\n    urls: Url[];\n\n    progress: Progress => void;\n\n    resolve: (Url[]) => void;\n\n    reject: () => void;\n\n    /**\n     * Build a sitemap repository\n     */\n    constructor(initialSitemap: string) {\n        this.initialUrl = initialSitemap;\n        this.sitemaps = [];\n        this.urls = [];\n    }\n\n    /**\n     * Find all the urls on a sitemap.\n     */\n    findAllPages(progress: Progress => void): Promise<Url[]> {\n        this.progress = progress;\n        if (this.sitemaps.length === 0) {\n            this.sitemaps.push(this.initialUrl);\n        }\n        return new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n            this.parseSiteMap();\n        });\n    }\n\n    /**\n     * Gets the sitemap, if there are more sitemaps it will add them to the list\n     * else, just adds the urls to the urls array.\n     */\n    parseSiteMap() {\n        let url = this.sitemaps.pop();\n        this.progress(new Progress(new Url(url), null, null, this.sitemaps.length, this.urls.length));\n        request(\"GET\", url).done(res => {\n            let xml = res.getBody(\"utf8\");\n            xml2js.parseString(xml, (err, result) => {\n                if (result[\"urlset\"]) {\n                    result[\"urlset\"][\"url\"].forEach(entry => {\n                        let url = new Url(entry[\"loc\"][0]);\n                        this.urls.push(url);\n                    });\n                    if (this.sitemaps.length === 0) {\n                        this.resolve(this.urls);\n                    } else {\n                        this.parseSiteMap();\n                    }\n                }\n                if (result[\"sitemapindex\"]) {\n                    result[\"sitemapindex\"][\"sitemap\"].forEach(entry => {\n                        this.sitemaps.push(entry[\"loc\"][0]);\n                    });\n                    this.parseSiteMap();\n                }\n            });\n        });\n    }\n}\n"],"file":"SitemapRepository.js"}