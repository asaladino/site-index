{"version":3,"sources":["../../src/Repository/JsonUrlsRepository.js"],"names":["writeFileSync","Url","JsonUrlsRepository","constructor","file","save","urls","Promise","resolve","JSON","stringify"],"mappings":"AACA,SAAQA,aAAR,QAA4B,IAA5B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA;;;;AAGA,eAAe,MAAMC,kBAAN,CAAyB;AACpC;;;AAKAC,EAAAA,WAAW,CAACC,IAAD,EAAe;AACtB,SAAKA,IAAL,GAAYA,IAAZ;AACH;AAED;;;;;AAGAC,EAAAA,IAAI,CAACC,IAAD,EAA4B;AAC5B,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BR,MAAAA,aAAa,CAAC,KAAKI,IAAN,EAAYK,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAZ,CAAb;AACAE,MAAAA,OAAO;AACV,KAHM,CAAP;AAIH;;AAlBmC","sourcesContent":["// @flow\nimport {writeFileSync} from \"fs\";\nimport Url from \"../Model/Url.js\";\n\n/**\n * Save the urls to a json file.\n */\nexport default class JsonUrlsRepository {\n    /**\n     * Build a json url repo.\n     */\n    file: string;\n\n    constructor(file: string) {\n        this.file = file;\n    }\n\n    /**\n     * Save urls to a json file.\n     */\n    save(urls: Url[]): Promise<any> {\n        return new Promise(resolve => {\n            writeFileSync(this.file, JSON.stringify(urls));\n            resolve();\n        });\n    }\n}\n"],"file":"JsonUrlsRepository.js"}