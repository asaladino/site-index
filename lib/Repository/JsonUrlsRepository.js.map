{"version":3,"sources":["../../src/Repository/JsonUrlsRepository.js"],"names":["JsonUrlsRepository","constructor","file","save","urls","Promise","resolve","JSON","stringify"],"mappings":";;;;;;;AACA;;AACA;;;;AAEA;;;AAGe,MAAMA,kBAAN,CAAyB;AACtC;;;AAIAC,EAAAA,WAAW,CAACC,IAAD,EAAe;AACxB,SAAKA,IAAL,GAAYA,IAAZ;AACD;AAED;;;;;AAGAC,EAAAA,IAAI,CAACC,IAAD,EAA4B;AAC9B,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5B,6BAAc,KAAKJ,IAAnB,EAAyBK,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzB;AACAE,MAAAA,OAAO;AACR,KAHM,CAAP;AAID;;AAjBqC","sourcesContent":["// @flow\r\nimport { writeFileSync } from \"fs\";\r\nimport Url from \"../Model/Url\";\r\n\r\n/**\r\n * Save the urls to a json file.\r\n */\r\nexport default class JsonUrlsRepository {\r\n  /**\r\n   * Build a json url repo.\r\n   */\r\n  file: string;\r\n  constructor(file: string) {\r\n    this.file = file;\r\n  }\r\n\r\n  /**\r\n   * Save urls to a json file.\r\n   */\r\n  save(urls: Url[]): Promise<any> {\r\n    return new Promise(resolve => {\r\n      writeFileSync(this.file, JSON.stringify(urls));\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n"],"file":"JsonUrlsRepository.js"}