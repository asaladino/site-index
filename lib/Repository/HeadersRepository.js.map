{"version":3,"sources":["../../src/Repository/HeadersRepository.js"],"names":["HeadersRepository","constructor","projectFolder","save","url","headers","file","getProjectsHeadersFolder","name","Promise","resolve","JSON","stringify","projectsPathHeaders"],"mappings":"6FACA,sBACA,yDACA,0B,kFAEA;;GAGe,KAAMA,CAAAA,iBAAkB,CACnC;;OADmC,CAMnC;;OAGAC,WAAW,CAACC,aAAD,CAAwB,CAC/B,KAAKA,aAAL,CAAqBA,aACxB,CAED;;OAGAC,IAAI,CAACC,GAAD,CAAWC,OAAX,CAAuC,CACvC,KAAMC,CAAAA,IAAI,CAAG,eAAK,KAAKC,wBAAL,EAAL,CAAsCH,GAAG,CAACI,IAAJ,CAAW,OAAjD,CAAb,CACA,MAAO,IAAIC,CAAAA,OAAJ,CAAYC,OAAO,EAAI,CAC1B,sBAAcJ,IAAd,CAAoBK,IAAI,CAACC,SAAL,CAAeP,OAAf,CAApB,EACAK,OAAO,EACV,CAHM,CAIV,CAED;;OAGAH,wBAAwB,EAAW,CAC/B,GAAIM,CAAAA,mBAAmB,CAAG,eAAK,KAAKX,aAAV,CAAyB,SAAzB,CAA1B,CACA,GAAI,CAAC,mBAAWW,mBAAX,CAAL,CAAsC,CAClC,kBAAUA,mBAAV,CACH,CACD,MAAOA,CAAAA,mBACV,CAjCkC,C","sourcesContent":["// @flow\nimport {writeFileSync, existsSync, mkdirSync} from \"fs\";\nimport Url from \"../Model/Url\";\nimport {join} from \"path\";\n\n/**\n * Save the url html to file.\n */\nexport default class HeadersRepository {\n    /**\n     * Location to the headers folder in the project.\n     */\n    projectFolder: string;\n\n    /**\n     * Build a json url repo.\n     */\n    constructor(projectFolder: string) {\n        this.projectFolder = projectFolder;\n    }\n\n    /**\n     * Save html to a file.\n     */\n    save(url: Url, headers: any): Promise<any> {\n        const file = join(this.getProjectsHeadersFolder(), url.name + \".json\");\n        return new Promise(resolve => {\n            writeFileSync(file, JSON.stringify(headers));\n            resolve();\n        });\n    }\n\n    /**\n     * Creates the html folder in the project if it doesn't exist.\n     */\n    getProjectsHeadersFolder(): string {\n        let projectsPathHeaders = join(this.projectFolder, \"headers\");\n        if (!existsSync(projectsPathHeaders)) {\n            mkdirSync(projectsPathHeaders);\n        }\n        return projectsPathHeaders;\n    }\n}\n"],"file":"HeadersRepository.js"}