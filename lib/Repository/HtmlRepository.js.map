{"version":3,"sources":["../../src/Repository/HtmlRepository.js"],"names":["HtmlRepository","constructor","projectFolder","save","url","html","file","getProjectsHtmlFolder","name","Promise","resolve","projectsPathHtml"],"mappings":"6FACA,sBACA,yDACA,0B,kFAEA;;GAGe,KAAMA,CAAAA,cAAe,CAChC;;OADgC,CAMhC;;OAGAC,WAAW,CAACC,aAAD,CAAwB,CAC/B,KAAKA,aAAL,CAAqBA,aACxB,CAED;;OAGAC,IAAI,CAACC,GAAD,CAAWC,IAAX,CAAuC,CACvC,KAAMC,CAAAA,IAAI,CAAG,eAAK,KAAKC,qBAAL,EAAL,CAAmCH,GAAG,CAACI,IAAJ,CAAW,OAA9C,CAAb,CACA,MAAO,IAAIC,CAAAA,OAAJ,CAAYC,OAAO,EAAI,CAC1B,sBAAcJ,IAAd,CAAoBD,IAApB,EACAK,OAAO,EACV,CAHM,CAIV,CAED;;OAGAH,qBAAqB,EAAW,CAC5B,GAAII,CAAAA,gBAAgB,CAAG,eAAK,KAAKT,aAAV,CAAyB,MAAzB,CAAvB,CACA,GAAI,CAAC,mBAAWS,gBAAX,CAAL,CAAmC,CAC/B,kBAAUA,gBAAV,CACH,CACD,MAAOA,CAAAA,gBACV,CAjC+B,C","sourcesContent":["// @flow\nimport {writeFileSync, existsSync, mkdirSync} from \"fs\";\nimport Url from \"../Model/Url\";\nimport {join} from \"path\";\n\n/**\n * Save the url html to file.\n */\nexport default class HtmlRepository {\n    /**\n     * Location to the html folder in the project.\n     */\n    projectFolder: string;\n\n    /**\n     * Build a json url repo.\n     */\n    constructor(projectFolder: string) {\n        this.projectFolder = projectFolder;\n    }\n\n    /**\n     * Save html to a file.\n     */\n    save(url: Url, html: string): Promise<any> {\n        const file = join(this.getProjectsHtmlFolder(), url.name + \".html\");\n        return new Promise(resolve => {\n            writeFileSync(file, html);\n            resolve();\n        });\n    }\n\n    /**\n     * Creates the html folder in the project if it doesn't exist.\n     */\n    getProjectsHtmlFolder(): string {\n        let projectsPathHtml = join(this.projectFolder, \"html\");\n        if (!existsSync(projectsPathHtml)) {\n            mkdirSync(projectsPathHtml);\n        }\n        return projectsPathHtml;\n    }\n}\n"],"file":"HtmlRepository.js"}