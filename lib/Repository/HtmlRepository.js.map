{"version":3,"sources":["../../src/Repository/HtmlRepository.js"],"names":["HtmlRepository","constructor","projectFolder","save","url","html","file","getProjectsHtmlFolder","name","Promise","resolve","projectsPathHtml"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAEA;;;AAGe,MAAMA,cAAN,CAAqB;AAChC;;;;AAKA;;;AAGAC,EAAAA,WAAW,CAACC,aAAD,EAAwB;AAC/B,SAAKA,aAAL,GAAqBA,aAArB;AACH;AAED;;;;;AAGAC,EAAAA,IAAI,CAACC,GAAD,EAAWC,IAAX,EAAuC;AACvC,UAAMC,IAAI,GAAG,gBAAK,KAAKC,qBAAL,EAAL,EAAmCH,GAAG,CAACI,IAAJ,GAAW,OAA9C,CAAb;AACA,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1B,6BAAcJ,IAAd,EAAoBD,IAApB;AACAK,MAAAA,OAAO;AACV,KAHM,CAAP;AAIH;AAED;;;;;AAGAH,EAAAA,qBAAqB,GAAW;AAC5B,QAAII,gBAAgB,GAAG,gBAAK,KAAKT,aAAV,EAAyB,MAAzB,CAAvB;;AACA,QAAI,CAAC,oBAAWS,gBAAX,CAAL,EAAmC;AAC/B,yBAAUA,gBAAV;AACH;;AACD,WAAOA,gBAAP;AACH;;AAjC+B","sourcesContent":["// @flow\nimport {writeFileSync, existsSync, mkdirSync} from \"fs\";\nimport Url from \"../Model/Url.js\";\nimport {join} from \"path\";\n\n/**\n * Save the url html to file.\n */\nexport default class HtmlRepository {\n    /**\n     * Location to the html folder in the project.\n     */\n    projectFolder: string;\n\n    /**\n     * Build a json url repo.\n     */\n    constructor(projectFolder: string) {\n        this.projectFolder = projectFolder;\n    }\n\n    /**\n     * Save html to a file.\n     */\n    save(url: Url, html: string): Promise<any> {\n        const file = join(this.getProjectsHtmlFolder(), url.name + \".html\");\n        return new Promise(resolve => {\n            writeFileSync(file, html);\n            resolve();\n        });\n    }\n\n    /**\n     * Creates the html folder in the project if it doesn't exist.\n     */\n    getProjectsHtmlFolder(): string {\n        let projectsPathHtml = join(this.projectFolder, \"html\");\n        if (!existsSync(projectsPathHtml)) {\n            mkdirSync(projectsPathHtml);\n        }\n        return projectsPathHtml;\n    }\n}\n"],"file":"HtmlRepository.js"}